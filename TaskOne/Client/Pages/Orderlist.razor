@page "/OrderList"
@using TaskOne.Shared;

@inject HttpClient http;

<a href="AddNewOrders/0" class="btn btn-secondary my-2">Add Aew Order</a>

<h3>Orderlist</h3>
@if (OrdersObj is null)
{
    <p><em>Loading... !</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Order Id</th>
                <th>Order Name</th>
                <th>State</th>                
                <th>Edit</th>
                <th>Delete</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var odr in OrdersObj)
            {
                <tr>
                    <td>@odr.orderid</td>
                    <td>@odr.OrderName</td>
                    <td>@odr.State</td>                    
                    <td>
                        <a class="nav-link" href="AddNewOrders/@odr.orderid">
                            <span class="oi oi-pencil" aria-hidden="true">Edit</span>
                        </a>
                       
                    </td>
                    <td>
                        <a href="javascript:void(0)" class="btn btn-danger" @onclick="@(() => DeleteOrder(@odr.orderid))">Delete</a>

                     </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {

    List<Orders> OrdersObj=null;
    OrderslstAll objOrderlist = new();
    protected override async Task OnInitializedAsync()
    {
        OrdersObj = await http.GetFromJsonAsync<List<Orders>>("api/Orders/GetOrders");


    }

    private async Task DeleteOrder(Int64 OrderId)
    {
        
        var result = await http.DeleteAsync("api/Orders/DeleteOrders/"+OrderId);
        OrdersObj = await http.GetFromJsonAsync<List<Orders>>("api/Orders/GetOrders");
    
    }


    
}
