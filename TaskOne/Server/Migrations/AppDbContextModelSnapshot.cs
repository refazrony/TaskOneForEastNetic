// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TaskOne.Server;

#nullable disable

namespace TaskOne.Server.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TaskOne.Shared.Orders", b =>
                {
                    b.Property<long>("orderid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("orderid"));

                    b.Property<string>("OrderName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("orderid");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("TaskOne.Shared.SubElement", b =>
                {
                    b.Property<int?>("SubElementID")
                        .HasColumnType("int");

                    b.Property<int?>("Height")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Width")
                        .HasColumnType("int");

                    b.Property<int?>("winId")
                        .HasColumnType("int");

                    b.HasKey("SubElementID");

                    b.HasIndex("winId");

                    b.ToTable("SubElement");
                });

            modelBuilder.Entity("TaskOne.Shared.windows", b =>
                {
                    b.Property<int>("winId")
                        .HasColumnType("int");

                    b.Property<string>("QuantityOfWindows")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TotalSubElements")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WindowName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("orderid")
                        .HasColumnType("bigint");

                    b.HasKey("winId");

                    b.HasIndex("orderid");

                    b.ToTable("windows");
                });

            modelBuilder.Entity("TaskOne.Shared.SubElement", b =>
                {
                    b.HasOne("TaskOne.Shared.windows", null)
                        .WithMany("liSubElement")
                        .HasForeignKey("winId");
                });

            modelBuilder.Entity("TaskOne.Shared.windows", b =>
                {
                    b.HasOne("TaskOne.Shared.Orders", null)
                        .WithMany("liwindows")
                        .HasForeignKey("orderid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TaskOne.Shared.Orders", b =>
                {
                    b.Navigation("liwindows");
                });

            modelBuilder.Entity("TaskOne.Shared.windows", b =>
                {
                    b.Navigation("liSubElement");
                });
#pragma warning restore 612, 618
        }
    }
}
